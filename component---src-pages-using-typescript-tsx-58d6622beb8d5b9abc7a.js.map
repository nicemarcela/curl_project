{"version":3,"sources":["webpack:///./src/pages/using-typescript.tsx","webpack:///./node_modules/reactstrap/es/Col.js","webpack:///./src/components/layout.js"],"names":["UsingTypescript","data","path","title","site","buildTime","href","to","query","getColumnSizeClass","isXs","colWidth","colSize","props","className","cssModule","widths","Tag","tag","attributes","colClasses","forEach","i","columnProp","_classNames","colSizeInterfix","colClass","size","push","order","offset","_colClass","length","classes","createElement","defaultProps","Layout","children","pageTitle","render","rel","integrity","crossOrigin","siteTitle","siteMetadata","id","src","Icon","alt","md"],"mappings":"6FAAA,0GAyBeA,UAZyC,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAT,OACtD,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,qBACX,sEACA,uEAA4C,wCAA5C,+DAAyH,2CAAzH,wEACA,uEAA4C,0CAA5C,oBAAgF,0CAAhF,gBAAgH,yCAAhH,UACA,6DAAkCD,EAAlC,wBAA6DD,EAAKG,KAAKC,UAAvE,KACA,8DAAmC,uBAAGC,KAAK,6CAAR,kCAAnC,KACA,kBAAC,OAAD,CAAMC,GAAG,KAAT,6BAMG,IAAMC,EAAQ,c,6KChBjBC,EAAqB,SAA4BC,EAAMC,EAAUC,GACnE,OAAgB,IAAZA,GAAgC,KAAZA,EACfF,EAAO,MAAQ,OAASC,EACV,SAAZC,EACFF,EAAO,WAAa,OAASC,EAAW,QAG1CD,EAAO,OAASE,EAAU,OAASD,EAAW,IAAMC,GAGzD,EAAM,SAAaC,GACrB,IAAIC,EAAYD,EAAMC,UAClBC,EAAYF,EAAME,UAClBC,EAASH,EAAMG,OACfC,EAAMJ,EAAMK,IACZC,EAAa,YAA8BN,EAAO,CAAC,YAAa,YAAa,SAAU,QAEvFO,EAAa,GACjBJ,EAAOK,SAAQ,SAAUV,EAAUW,GACjC,IAAIC,EAAaV,EAAMF,GAGvB,UAFOQ,EAAWR,GAEbY,GAA6B,KAAfA,EAAnB,CAIA,IAAIb,GAAQY,EAEZ,GAAI,YAASC,GAAa,CACxB,IAAIC,EAEAC,EAAkBf,EAAO,IAAM,IAAMC,EAAW,IAChDe,EAAWjB,EAAmBC,EAAMC,EAAUY,EAAWI,MAC7DP,EAAWQ,KAAK,YAAgB,MAAYJ,EAAc,IAAgBE,GAAYH,EAAWI,MAA4B,KAApBJ,EAAWI,KAAaH,EAAY,QAAUC,EAAkBF,EAAWM,OAASN,EAAWM,OAA8B,IAArBN,EAAWM,MAAaL,EAAY,SAAWC,EAAkBF,EAAWO,QAAUP,EAAWO,QAAgC,IAAtBP,EAAWO,OAAcN,IAAeT,QAC/V,CACL,IAAIgB,EAAYtB,EAAmBC,EAAMC,EAAUY,GAEnDH,EAAWQ,KAAKG,QAIfX,EAAWY,QACdZ,EAAWQ,KAAK,OAGlB,IAAIK,EAAU,YAAgB,IAAWnB,EAAWM,GAAaL,GACjE,OAAO,IAAMmB,cAAcjB,EAAK,YAAS,GAAIE,EAAY,CACvDL,UAAWmB,MAIf,EAAIE,aAxDe,CACjBjB,IAAK,MACLF,OAHc,CAAC,KAAM,KAAM,KAAM,KAAM,OA0D1B,QCNAoB,IAtCA,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,UAAb,OACb,kBAAC,cAAD,CACE9B,MAAK,aASL+B,OAAQ,SAAAtC,GAAI,OACV,oCAEE,0BACEuC,IAAI,aACJlC,KAAK,0DACLmC,UAAU,0EACVC,YAAY,cAGd,kBAAC,IAAD,CAAQC,UAAW1C,EAAKG,KAAKwC,aAAazC,QAC1C,yBAAKW,UAAU,YAAY+B,GAAG,WAC9B,yBAAK/B,UAAU,OAAOgC,IAAKC,IAAMC,IAAI,KACrC,wBAAIlC,UAAU,SAASwB,GACrB,yBAAKxB,UAAU,8BACb,kBAAC,EAAD,CAAKmC,GAAG,KAAKZ,W","file":"component---src-pages-using-typescript-tsx-58d6622beb8d5b9abc7a.js","sourcesContent":["// If you don't want to use TypeScript you can delete this file!\r\nimport React from \"react\"\r\nimport { PageProps, Link, graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\n\r\ntype DataProps = {\r\n  site: {\r\n    buildTime: string\r\n  }\r\n}\r\n\r\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({ data, path }) => (\r\n  <Layout>\r\n    <SEO title=\"Using TypeScript\" />\r\n    <h1>Gatsby supports TypeScript by default!</h1>\r\n    <p>This means that you can create and write <em>.ts/.tsx</em> files for your pages, components etc. Please note that the <em>gatsby-*.js</em> files (like gatsby-node.js) currently don't support TypeScript yet.</p>\r\n    <p>For type checking you'll want to install <em>typescript</em> via npm and run <em>tsc --init</em> to create a <em>.tsconfig</em> file.</p>\r\n    <p>You're currently on the page \"{path}\" which was built on {data.site.buildTime}.</p>\r\n    <p>To learn more, head over to our <a href=\"https://www.gatsbyjs.org/docs/typescript/\">documentation about TypeScript</a>.</p>\r\n    <Link to=\"/\">Go back to the homepage</Link>\r\n  </Layout>\r\n)\r\n\r\nexport default UsingTypescript\r\n\r\nexport const query = graphql`\r\n  {\r\n    site {\r\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\r\n    }\r\n  }\r\n`\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar defaultProps = {\n  tag: 'div',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Col = function Col(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      widths = props.widths,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"widths\", \"tag\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      var colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames)), cssModule));\n    } else {\n      var _colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n\n      colClasses.push(_colClass);\n    }\n  });\n\n  if (!colClasses.length) {\n    colClasses.push('col');\n  }\n\n  var classes = mapToCssModules(classNames(className, colClasses), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCol.defaultProps = defaultProps;\nexport default Col;","/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\n\r\nimport Header from \"./header\"\r\n\r\nimport '../styles/index.scss'\r\n\r\nimport Icon from '../images/icon.png';\r\n\r\nimport { Row, Col } from 'reactstrap'\r\n\r\nconst Layout = ({ children, pageTitle }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <>\r\n      \r\n        <link\r\n          rel=\"stylesheet\"\r\n          href=\"https://use.fontawesome.com/releases/v5.6.3/css/all.css\"\r\n          integrity=\"sha384-UHRtZLI+pbxtHCWp1t77Bi1L4ZtiqrqD80Kn4Z8NTSRyMA2Fd33n5dQ8lWUE00s/\"\r\n          crossOrigin=\"anonymous\"\r\n        />\r\n        \r\n        <Header siteTitle={data.site.siteMetadata.title} />\r\n        <div className=\"container\" id=\"content\">\r\n        <img className=\"icon\" src={Icon} alt=\"\" />\r\n        <h1 className=\"title\">{pageTitle}</h1>\r\n          <div className=\"row justify-content-center\">\r\n            <Col md=\"8\">{children}</Col>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )}\r\n  />\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n"],"sourceRoot":""}