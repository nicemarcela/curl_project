{"version":3,"sources":["webpack:///./src/templates/tag-posts.js","webpack:///./src/components/layout.js","webpack:///./node_modules/reactstrap/es/CardDeck.js","webpack:///./node_modules/reactstrap/es/CardTitle.js","webpack:///./node_modules/reactstrap/es/CardText.js","webpack:///./src/components/Post.js","webpack:///./src/util/utilityFunctions.js"],"names":["tagQuery","tagPosts","data","tag","pageContext","totalCount","allMarkdownRemark","pageHeader","pageTitle","edges","map","node","key","id","slug","fields","title","frontmatter","author","date","body","excerpt","tags","fluid","image","childImageSharp","Layout","children","query","render","rel","href","integrity","crossOrigin","siteTitle","site","siteMetadata","className","src","Icon","alt","props","cssModule","Tag","attributes","classes","createElement","defaultProps","Post","product1","product2","product3","linkURL","instaURL","instagrammer","type","to","slugify","Badge","color","pill","CardSubtitle","target","module","exports","text","toString","toLowerCase","replace"],"mappings":"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","file":"component---src-templates-tag-posts-js-fcfb1786068ae7ac1737.js","sourcesContent":["import React from 'react'\r\nimport { graphql } from 'gatsby'\r\nimport Layout from '../components/layout'\r\nimport Post from '../components/Post'\r\n\r\nconst tagPosts = ({ data, pageContext }) => {\r\n  const { tag } = pageContext\r\n  const { totalCount } = data.allMarkdownRemark\r\n  const pageHeader = `${totalCount} post${\r\n    totalCount === 1 ? '' : 's'\r\n  } tagged with \"${tag}\"`\r\n\r\n  return (\r\n    <Layout pageTitle={pageHeader}>\r\n      {data.allMarkdownRemark.edges.map(({ node }) => (\r\n        <Post\r\n          key={node.id}\r\n          slug={node.fields.slug}\r\n          title={node.frontmatter.title}\r\n          author={node.frontmatter.author}\r\n          date={node.frontmatter.date}\r\n          body={node.excerpt}\r\n          tags={node.frontmatter.tags}\r\n          fluid={node.frontmatter.image.childImageSharp.fluid}\r\n        />\r\n      ))}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const tagQuery = graphql`\r\n  query($tag: String!) {\r\n    allMarkdownRemark(\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { frontmatter: { tags: { in: [$tag] } } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          id\r\n          frontmatter {\r\n            title\r\n            date(formatString: \"MMMM Do YYYY\")\r\n            author\r\n            tags\r\n            image {\r\n              childImageSharp {\r\n                fluid(maxWidth: 650, maxHeight: 650) {\r\n                  ...GatsbyImageSharpFluid\r\n                }\r\n              }\r\n            }\r\n          }\r\n          fields {\r\n            slug\r\n          }\r\n          excerpt\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default tagPosts","/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\n\r\nimport Header from \"./header\"\r\nimport Footer from './Footer'\r\n\r\nimport '../styles/index.scss'\r\n\r\nimport Icon from '../images/icon.png';\r\n\r\nimport { Col } from 'reactstrap'\r\n\r\nconst Layout = ({ children, pageTitle }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <>\r\n      \r\n        <link\r\n          rel=\"stylesheet\"\r\n          href=\"https://use.fontawesome.com/releases/v5.6.3/css/all.css\"\r\n          integrity=\"sha384-UHRtZLI+pbxtHCWp1t77Bi1L4ZtiqrqD80Kn4Z8NTSRyMA2Fd33n5dQ8lWUE00s/\"\r\n          crossOrigin=\"anonymous\"\r\n        />\r\n        \r\n        <Header siteTitle={data.site.siteMetadata.title} />\r\n        <div className=\"container\" id=\"content\">\r\n        <img className=\"icon\" src={Icon} alt=\"\" />\r\n        <h1 className=\"title\">{pageTitle}</h1>\r\n        <h3 className=\"brand-description\">Community-based stories to inspire your natural hair journey.</h3>\r\n          <div className=\"row justify-content-center\">\r\n            <div>{children}</div>\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </>\r\n    )}\r\n  />\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardDeck = function CardDeck(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-deck'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardDeck.defaultProps = defaultProps;\nexport default CardDeck;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardTitle = function CardTitle(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-title'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardTitle.defaultProps = defaultProps;\nexport default CardTitle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar defaultProps = {\n  tag: 'p'\n};\n\nvar CardText = function CardText(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-text'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardText.defaultProps = defaultProps;\nexport default CardText;","import React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport { CardText, CardSubtitle, CardTitle, CardDeck, Badge } from 'reactstrap'\r\nimport Img from 'gatsby-image'\r\nimport { slugify } from '../util/utilityFunctions'\r\n// import Layout from \"../components/layout\"\r\n\r\nconst Post = \r\n ({ title, \r\n    author, \r\n    slug, \r\n    date, \r\n    body, \r\n    fluid, \r\n    product1, \r\n    product2, \r\n    product3, \r\n    linkURL,\r\n    instaURL,\r\n    instagrammer,\r\n    type,\r\n    tags,\r\n }) => {\r\n    return (\r\n    <layout>\r\n        <CardDeck>\r\n        <div className=\"card-body px-0\">\r\n            <div className=\"window window-2\">     \r\n                <header className=\"window-header\">\r\n                    <ul>{tags.map(tag => (\r\n                        <li key={tag}>\r\n                            <Link to={`/tag/${slugify(tag)}`}>\r\n                            <Badge color=\"badge badge-light mb-1 text-center\" pill>\r\n                                {tag}\r\n                            </Badge>\r\n                            </Link>\r\n                        </li>\r\n                        ))}\r\n                    </ul>\r\n                    <CardSubtitle>\r\n                        <span className=\"card-subtitle\">{date}</span> by {' '}\r\n                        <a href={linkURL} target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-info\">{author} \r\n                        </a>\r\n                    </CardSubtitle>\r\n                    <nav className=\"window-controls\"></nav>\r\n                </header>\r\n            <div className='dragbar-right' id=\"resize-right\"></div>\r\n            <div className='dragbar-left' id=\"resize-left\"></div>\r\n            <div className='dragbar-bottom' id=\"resize-bottom\"></div>\r\n            <div  className=\"window-content p-4\">\r\n            \r\n            <CardTitle>\r\n                <Link to={`/${slug}/`}>\r\n                <h2>{title}</h2>\r\n                </Link>\r\n            </CardTitle>\r\n            \r\n            \r\n            <Link to={`/${slug}/`}>\r\n                <Img className=\"card-image my-4 w-100\" fluid={fluid} />\r\n            </Link>\r\n        {/* <h1 id='headline'>What The Curl</h1> */}\r\n            <Link to={`/${slug}/`}>\r\n                <CardText className=\"mx-0 mb-4\">\r\n                    {body}\r\n                    {product1}\r\n                    {product2}\r\n                    {product3}\r\n                </CardText>\r\n            </Link>\r\n\r\n            <Link to={`/${slug}/`} className=\"float-right item window1\">\r\n            <button className=\"double-shadow highlighted\">\r\n            More\r\n            </button>\r\n            </Link>\r\n        \r\n\r\n            </div>\r\n            </div>\r\n        </div>\r\n        </CardDeck>\r\n    </layout>\r\n    )\r\n}\r\n\r\nexport default Post","const slugify = function(text) {\r\n    return text\r\n      .toString()\r\n      .toLowerCase()\r\n      .replace(/\\s+/g, '-')       // Replace spaces with -\r\n      .replace(/[^\\w-]+/g, '')    // Remove all non-word chars\r\n      .replace(/--+/g, '-')       // Replace multiple - with single -\r\n      .replace(/^-+/, '')         // Trim - from start of text\r\n      .replace(/-+$/, '')         // Trim - from end of text\r\n  }\r\n\r\nmodule.exports = { slugify }"],"sourceRoot":""}