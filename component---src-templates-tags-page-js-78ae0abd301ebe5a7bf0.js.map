{"version":3,"sources":["webpack:///./node_modules/reactstrap/es/Badge.js","webpack:///./src/components/layout.js","webpack:///./src/util/utilityFunctions.js","webpack:///./src/templates/tags-page.js","webpack:///./node_modules/reactstrap/es/Button.js"],"names":["Badge","props","className","cssModule","color","innerRef","pill","Tag","tag","attributes","classes","href","createElement","ref","defaultProps","Layout","children","pageTitle","query","render","data","rel","integrity","crossOrigin","siteTitle","site","siteMetadata","title","id","src","Icon","alt","module","exports","slugify","text","toString","toLowerCase","replace","tagsPage","pageContext","tags","tagPostCounts","keywords","map","key","style","marginBottom","Button","_React$Component","_this","call","this","onClick","bind","_proto","prototype","e","disabled","preventDefault","_this$props","active","ariaLabel","block","close","outline","size","btnOutlineColor","defaultAriaLabel","type","undefined","Component"],"mappings":"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","file":"component---src-templates-tags-page-js-78ae0abd301ebe5a7bf0.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar defaultProps = {\n  color: 'secondary',\n  pill: false,\n  tag: 'span'\n};\n\nvar Badge = function Badge(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      innerRef = props.innerRef,\n      pill = props.pill,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"innerRef\", \"pill\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'badge', 'badge-' + color, pill ? 'badge-pill' : false), cssModule);\n\n  if (attributes.href && Tag === 'span') {\n    Tag = 'a';\n  }\n\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nBadge.defaultProps = defaultProps;\nexport default Badge;","/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\n\r\nimport Header from \"./header\"\r\nimport Footer from './Footer'\r\n\r\nimport '../styles/index.scss'\r\n\r\nimport Icon from '../images/icon.png';\r\n\r\nimport { Col } from 'reactstrap'\r\n\r\nconst Layout = ({ children, pageTitle }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <>\r\n      \r\n        <link\r\n          rel=\"stylesheet\"\r\n          href=\"https://use.fontawesome.com/releases/v5.6.3/css/all.css\"\r\n          integrity=\"sha384-UHRtZLI+pbxtHCWp1t77Bi1L4ZtiqrqD80Kn4Z8NTSRyMA2Fd33n5dQ8lWUE00s/\"\r\n          crossOrigin=\"anonymous\"\r\n        />\r\n        \r\n        <Header siteTitle={data.site.siteMetadata.title} />\r\n        <div className=\"container\" id=\"content\">\r\n        <img className=\"icon\" src={Icon} alt=\"\" />\r\n        <h1 className=\"title\">{pageTitle}</h1>\r\n        <h3 className=\"brand-description\">Community-based stories to inspire your natural hair journey.</h3>\r\n          <div className=\"row justify-content-center\">\r\n            <div>{children}</div>\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </>\r\n    )}\r\n  />\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","const slugify = function(text) {\r\n    return text\r\n      .toString()\r\n      .toLowerCase()\r\n      .replace(/\\s+/g, '-')       // Replace spaces with -\r\n      .replace(/[^\\w-]+/g, '')    // Remove all non-word chars\r\n      .replace(/--+/g, '-')       // Replace multiple - with single -\r\n      .replace(/^-+/, '')         // Trim - from start of text\r\n      .replace(/-+$/, '')         // Trim - from end of text\r\n  }\r\n\r\nmodule.exports = { slugify }","import React from 'react'\r\nimport Layout from '../components/layout'\r\nimport SEO from '../components/seo'\r\nimport { Badge, Button } from 'reactstrap'\r\nimport { slugify } from '../util/utilityFunctions'\r\n\r\nconst tagsPage = ({ pageContext }) => {\r\n  const { tags, tagPostCounts } = pageContext\r\n  return (\r\n    <Layout pageTitle=\"All tags\">\r\n      <SEO title=\"All tags\" keywords={['tags', 'topics']} />\r\n      <ul>\r\n        {tags.map(tag => (\r\n          <li key={tag} style={{ marginBottom: '10px' }}>\r\n            <Button color=\"primary\" href={`/tag/${slugify(tag)}`}>\r\n              {tag} <Badge color=\"light\">{tagPostCounts[tag]}</Badge>\r\n            </Button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default tagsPage","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar defaultProps = {\n  color: 'secondary',\n  tag: 'button'\n};\n\nvar Button = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Button, _React$Component);\n\n  function Button(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Button.prototype;\n\n  _proto.onClick = function onClick(e) {\n    if (this.props.disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        active = _this$props.active,\n        ariaLabel = _this$props['aria-label'],\n        block = _this$props.block,\n        className = _this$props.className,\n        close = _this$props.close,\n        cssModule = _this$props.cssModule,\n        color = _this$props.color,\n        outline = _this$props.outline,\n        size = _this$props.size,\n        Tag = _this$props.tag,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"active\", \"aria-label\", \"block\", \"className\", \"close\", \"cssModule\", \"color\", \"outline\", \"size\", \"tag\", \"innerRef\"]);\n\n    if (close && typeof attributes.children === 'undefined') {\n      attributes.children = React.createElement(\"span\", {\n        \"aria-hidden\": true\n      }, \"\\xD7\");\n    }\n\n    var btnOutlineColor = \"btn\" + (outline ? '-outline' : '') + \"-\" + color;\n    var classes = mapToCssModules(classNames(className, {\n      close: close\n    }, close || 'btn', close || btnOutlineColor, size ? \"btn-\" + size : false, block ? 'btn-block' : false, {\n      active: active,\n      disabled: this.props.disabled\n    }), cssModule);\n\n    if (attributes.href && Tag === 'button') {\n      Tag = 'a';\n    }\n\n    var defaultAriaLabel = close ? 'Close' : null;\n    return React.createElement(Tag, _extends({\n      type: Tag === 'button' && attributes.onClick ? 'button' : undefined\n    }, attributes, {\n      className: classes,\n      ref: innerRef,\n      onClick: this.onClick,\n      \"aria-label\": ariaLabel || defaultAriaLabel\n    }));\n  };\n\n  return Button;\n}(React.Component);\n\nButton.defaultProps = defaultProps;\nexport default Button;"],"sourceRoot":""}